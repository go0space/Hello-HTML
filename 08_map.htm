<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>
</head>

<body>
    <script>
        const map = new Map();
        map.set("2019101", "HongGilDong");
        map.set("2019102", "KimSaRang");
        map.set("2019103", "KangDongSu");

        console.log("### Original data: forEach with Arrow")
        map.forEach((value, key) => console.log(key, value));

        console.log("### Original data: for-of")
        for (let item of map) {
            console.log(item[0], item[1]);
        }

        console.log("### Original data: for-of with key, map")
        for (let [key, value] of map) {
            console.log(key, value);
        }

        console.log("### Original data: map.keys()")
        const keys = map.keys();
        for (let key of keys) {
            console.log(map.get(key));
        }

        console.log("### Map functions")
        console. log("get 201901: " + map.get("201901"));
        map.delete("2019103")
        console.log("after delete 201903, has: ", map.has("2019103"));
    </script>
</body>

</html>

<!-- 
    forEach()를 이용해 key, value 값을 각각 출력
    for-of 에서도 key, vlaue 를 각각 받아와 출력 가능
 -->

 <!-- 
    forEach 반복문은 오직 Array 객체에서만 사용가능한 메소드
    배열의 요소들을 반복하여 작업을 수행할 수 있다
  -->

  <!-- 
    for-in 반복문은 객체내에 사용할 수 있다
    객체의 key값과 value 값을 뽑아내는데 유용하다
    객체의 키 값의 갯수만큼 반복하여 첫번째 키 값부터 마지막 키 값까지 반복한다
   -->

   <!-- 
    for-of 반복문은 ES6에 추가된 새로운 컬렉션 전용 반복 구문이다
    사용하기 위해선 컬렉션 객체가 [Symbol.iterator] 속성을 가지고 있어야 한다
    -->

    <!-- 
        for-in  <->  for-of
        객체의 모든 열거 가능한 속성(property)에 대한 반복  <->  [Symbol.iterator] 속성을 가지는 컬렉션 적용
     -->